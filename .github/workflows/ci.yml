name: CI

on:
  push:
    branches: ['master']
  pull_request:

jobs:
  test-and-build:
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest" ]
        toolchain: [ "stable" ]
        python-version: [ 3.9 ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pypoetry/
            ~/.local/share/virtualenv/
            .venv
            .pytest_cache
            __pycache__
            build
            dist
          key: ci-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ci-${{ runner.os }}-

      - name: Install Rust
        shell: bash
        run: rustup install stable --profile minimal

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry & init
        run: |
          python -m pip install --upgrade pip
          pip install --user poetry
          poetry install

      - name: Install
        run: poetry run maturin develop

      - name: Test
        run: poetry run pytest tests

      - name: Build package
        uses: PyO3/maturin-action@v1
        with:
          command: build
          manylinux: auto
          args: -i python${{ matrix.python-version }} --release --out dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pytomlrs wheel
          path: dist
